version: "3.7"

networks:
  demo-network:
    name: demo-network
#    external: true
  demo-proxy.network:
    name: demo-proxy.network
#    external: true

services:
  demo-app:
    container_name: demo-app
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    depends_on:
      - demo-mysql
      - demo-redis
    env_file:
      - .env
    volumes:
      - ./:/app:cached
    extra_hosts:
      - "host.docker.internal:host-gateway" #for xDebug
    networks:
      - demo-network

  demo-app-nginx:
    container_name: demo-app-nginx
    build:
      context: ./docker/nginx
    depends_on:
      - demo-app
    volumes:
      - ./public:/app/public:cached
    networks:
      - demo-network
      - demo-proxy.network
    labels:
      - traefik.enable=true
      - traefik.http.routers.demo-nginx.rule=Host(`demo.localhost`)

  demo-redis:
    container_name: demo-redis
    build:
      context: ./docker/redis
    command: redis-server --appendonly yes
    hostname: "redis"
    volumes:
      - demo-redis-storage:/data
    networks:
      - demo-network
      - demo-proxy.network
    labels:
      - traefik.enable=true
      - traefik.tcp.services.demo-redis.loadBalancer.server.port=6379
      - traefik.tcp.routers.demo-redis.entrypoints=redis
      - traefik.tcp.routers.demo-redis.rule=HostSNI(`*`)
      - traefik.tcp.routers.demo-redis.service=demo-redis

  demo-mysql:
    container_name: demo-mysql
    build:
      context: ./docker/mysql
    volumes:
      - demo-mysql-storage:/var/lib/mysql
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
    networks:
      - demo-network
      - demo-proxy.network
    labels:
      - traefik.enable=true
      - traefik.tcp.services.demo-mysql.loadBalancer.server.port=3306
      - traefik.tcp.routers.demo-mysql.entrypoints=mysql
      - traefik.tcp.routers.demo-mysql.rule=HostSNI(`*`)
      - traefik.tcp.routers.demo-mysql.service=demo-mysql

  demo-rabbit:
    container_name: demo-rabbit
    build:
      context: ./docker/rmq
    volumes:
      - demo-rabbit-storage:/var/lib/rabbitmq
    networks:
      - demo-network
      - demo-proxy.network
    labels:
      - traefik.enable=true
      - traefik.tcp.services.demo-rabbit.loadBalancer.server.port=5672
      - traefik.tcp.routers.demo-rabbit.entrypoints=rabbit
      - traefik.tcp.routers.demo-rabbit.rule=HostSNI(`*`)
      - traefik.tcp.routers.demo-rabbit.service=demo-rabbit

  demo-proxy:
    container_name: demo-proxy
    image: traefik:v2.5
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=demo-proxy.network
      - --providers.docker.useBindPortIP=false
      - --entrypoints.web.address=:80
      - --entrypoints.redis.address=:6379
      - --entrypoints.mysql.address=:3306
      - --entrypoints.rabbit.address=:5672
      - --api.dashboard=true
      - --api.insecure=true
    ports:
      - "80:80"
      - "6379:6379"
      - "3306:3306"
      - "5672:5672"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - demo-proxy.network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`demo-proxy.localhost`)"
      - "traefik.http.routers.api.service=api@internal"

volumes:
  demo-redis-storage:
  demo-mysql-storage:
  demo-rabbit-storage:
